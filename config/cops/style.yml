# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true

Style/DefWithParentheses:
  Enabled: true

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

Style/FrozenStringLiteralComment:
  EnforcedStyle: never

Style/RedundantFreeze:
  Enabled: true

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

# Use quotes for string literals when they are enough.
Style/RedundantPercentQ:
  Enabled: true

Style/ParenthesesAroundCondition:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

# enforces to use 'name'.to_sym over 'name'.intern and so on
Style/StringMethods:
  Enabled: true

Style/EmptyMethod:
  EnforcedStyle: expanded
  SupportedStyles:
    - compact
    - expanded

Style/SymbolArray:
  Enabled: true

Style/RedundantBegin:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/RedundantRegexpEscape:
  Enabled: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

# Prefer Foo.method over Foo::method
Style/ColonMethodCall:
  Enabled: true

Style/CollectionMethods:
  Enabled: true

Style/Documentation:
  Enabled: false

Style/TrivialAccessors:
  Enabled: true

Style/ArgumentsForwarding:
  Enabled: false

Style/CollectionCompact:
  Enabled: true

Style/DocumentDynamicEvalDefinition:
  Enabled: true

Style/NegatedIfElseCondition:
  Enabled: true

Style/NilLambda:
  Enabled: true

Style/RedundantArgument:
  Enabled: true

Style/SwapValues:
  Enabled: true

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma
